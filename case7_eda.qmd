---
title: "Case 7"
author: "Li Fan and Shuo"
format: pdf
editor: visual
---

```{r, echo = FALSE, output = FALSE}
#| label: load-packages
#| message: false

library(tidyverse)
library(lme4)
library(lmtest)
library(mgcv)
library(gamm4)
library(survival)
library(survminer)
library(tidymv)
library(xtable)
library(UpSetR)
library(naniar)
library(ggplot2)

# library(brms)
# library(bayesplot)
# library(tidyquant)

# knitr options
knitr::opts_chunk$set(fig.align = 'center')
knitr::opts_chunk$set(echo = TRUE)

# Set the seed
set.seed(42)
```

# EDA

```{r}
load("OvCaSurvival.RData") # df: clin
dim(clin)
head(clin)
table(clin$TumorSubtype)
```

```{r}
# delete: both day to death and day to last follow up is NA
clin = clin[!(is.na(clin$DaysToDeath) & is.na(clin$DaysToLastFU)),]
# censor indicator: DaysToDeath == NA, censor = 1
clin$censor = as.numeric(is.na(clin$DaysToDeath))
# time: censored, DaysToLastFU; otherwise, DaysToDeath
clin$time = ifelse(clin$censor, clin$DaysToLastFU, clin$DaysToDeath)
# days to progress & recur: if NA, set to 0
clin[is.na(clin$DaysToProgress), "DaysToProgress"] = 0
clin[is.na(clin$DaysToRecur), "DaysToRecur"] = 0
# remove column: "SampleID", "ResidualTumor"
df = clin[,!colnames(clin) %in% c("DaysToDeath", "DaysToLastFU", "SampleID", "ResidualTumor")]
colSums(is.na(df))
gg_miss_upset(df, nsets = 8)
df = na.omit(df)
```

```{r}
ggplot(df, aes(x = TumorSubtype, y = time)) +
  geom_boxplot() +
  labs(x = "TumorSubtype", y = "DaysToDeath") 

```

```{r}
ggplot(data = df, aes(x = AgeDX)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  theme_minimal() +
  ggtitle("Distribution of Age at Diagnosis") +
  xlab("Age at Diagnosis") +
  ylab("Count")
```

```{r}
ggplot(data = df, aes(x = as.factor(Grade), y = time)) +
  geom_boxplot() +
  theme_minimal() +
  ggtitle("Survival Time by Tumor Grade") +
  xlab("Tumor Grade") +
  ylab("Survival Time (days)")
```

```{r}
ggplot(data = df, aes(x = AgeDX, y = time)) +
  geom_point(alpha = 0.6) +
  theme_minimal() +
  ggtitle("Age at Diagnosis vs. Survival Time") +
  xlab("Age at Diagnosis") +
  ylab("Survival Time (days)")
```

```{r}
ggplot(data = df, aes(x = time, fill = VitalStatus)) +
  geom_density(alpha = 0.7) +
  facet_wrap(~VitalStatus) +
  theme_minimal() +
  ggtitle("Density of Survival Times by Vital Status") +
  xlab("Survival Time (days)") +
  ylab("Density")
```

```{r}
df %>% 
  mutate(censor_name = ifelse(censor, "censored", "non-censored")) %>% 
  ggplot(data = , aes(x = time)) +
  geom_histogram(binwidth = 100, fill = "skyblue", color = "black", alpha = 0.7) +
  facet_wrap(~censor_name, scales = "free_y") +
  labs(title = "Survival Time Distribution by Censor Status",
       x = "Survival Time (days)",
       y = "Count") +
  theme_minimal()
```

```{r}
ggplot(data = df, aes(x = factor(censor), y = AgeDX, fill = factor(censor))) +
  geom_boxplot() +
  scale_fill_manual(values = c("0" = "steelblue", "1" = "lightblue")) +
  labs(title = "Age at Diagnosis by Censor Status",
       x = "Censor Status",
       y = "Age at Diagnosis",
       fill = "Status") +
  theme_minimal() +
  scale_x_discrete(labels = c("0" = "Non-Censored", "1" = "Censored"))
```

## **Kaplan-Meier**

```{r}
# The formula ~ 1 indicates that we are estimating the overall survival curve without any covariates.
km_fit <- survfit(Surv(DaysToDeath, censor) ~ 1, data = df)
# summary(km_fit)

plot(km_fit, main = "Kaplan-Meier Survival Curve", 
     xlab = "Time", ylab = "Survival Probability")
```

```{r}
km_fit_group <- survfit(Surv(DaysToDeath, censor) ~ TumorSubtype, data = df)

ggsurvplot(km_fit_group, data = df, 
           title = "Kaplan-Meier Survival Curve by Tumor Subtype",
           xlab = "Time", ylab = "Survival Probability",
           legend.title = "Tumor Subtype",
           legend = c(0.15, 0.2), # Adjust legend position
           legend.labs = unique(df$TumorSubtype), 
           ggtheme = theme_minimal())
```

## Cox model

```{r}
cox_model <- coxph(Surv(DaysToDeath) ~ TumorSubtype + RadiationTherapy + ChemoTherapy +
                     HormonalTherapy + ImmunoTherapy, 
                   data = df)
summary(cox_model)

```

```{r}
ggsurvplot(survfit(cox_model), color = "#2E9FDF",
           ggtheme = theme_minimal())
```

Question

missing data
